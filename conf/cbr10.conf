
graph test {
    // global settings for measurements
    counterexportfile="counters"
    flowexportfn=text_export_factory
    flowsampling=1.0
    pktsampling=1.0
    exportcycle=60
    counterexport=True
    counterexportinterval=1
    longflowtmo=60
    flowinactivetmo=60
    measurementnodes="a"


    head [ 
        type="ofswitch"
        autoack="False"
        ipdests="10.1.0.0/16"
        traffic="m1"

        // harpoon
        // m1="modulator start=0.0 generator=s1 profile=((3600,),(10,))"
        // s1="harpoon ipsrc=10.1.1.0/24 ipdst=10.3.1.0/24 flowsize=pareto(5000,1.2) flowstart=exponential(10.0) ipproto=randomchoice(6) sport=randomchoice(22,80,443) dport=randomunifint(1025,65535) lossrate=randomchoice(0.001)"

        // udp vbr flows 
        m1="modulator start=0 generator=s1 profile=((3600,),(1,))"
        s1="rawflow ipsrc=10.1.1.0/24 ipdst=10.3.1.0/24 flowlets=1 dport=randomunifint(1024,65535) sport=randomunifint(1024,65535) ipproto=udp pkts=randomchoice(8333) bytes=randomchoice(12500000) continuous=True fps=1"
    ];

    tail [ 
        type="ofswitch"
        autoack="False"
        ipdests="10.3.0.0/16 10.4.0.0/16 10.0.0.0/8" 
    ];

    controller [
        type="ofcontroller"
	    forwarding="shortest_paths"
    ];

    a [
        type="ofswitch"
        autoack="False"
    ]

    b [
        type="ofswitch"
        autoack="False"
    ]

    c [
        type="ofswitch"
        autoack="False"
    ]

    d [
        type="ofswitch"
        autoack="False"
    ]

    e [
        type="ofswitch"
        autoack="False"
    ]

    f [
        type="ofswitch"
        autoack="False"
    ]

    g [
        type="ofswitch"
        autoack="False"
    ]

    h [
        type="ofswitch"
        autoack="False"
    ]

    i [
        type="ofswitch"
        autoack="False"
    ]

    j [
        type="ofswitch"
        autoack="False"
    ]

        head -- a [weight=10, capacity=1000000000, delay=0.01 ];

        head -- controller [ capacity=1000000000, delay=0.01 ]

        a -- b [weight=10, capacity=1000000000, delay=0.01 ];

        a -- controller [ capacity=1000000000, delay=0.01 ]

        b -- c [weight=10, capacity=1000000000, delay=0.01 ];

        b -- controller [ capacity=1000000000, delay=0.01 ]

        c -- d [weight=10, capacity=1000000000, delay=0.01 ];

        c -- controller [ capacity=1000000000, delay=0.01 ]

        d -- e [weight=10, capacity=1000000000, delay=0.01 ];

        d -- controller [ capacity=1000000000, delay=0.01 ]

        e -- f [weight=10, capacity=1000000000, delay=0.01 ];

        e -- controller [ capacity=1000000000, delay=0.01 ]

        f -- g [weight=10, capacity=1000000000, delay=0.01 ];

        f -- controller [ capacity=1000000000, delay=0.01 ]

        g -- h [weight=10, capacity=1000000000, delay=0.01 ];

        g -- controller [ capacity=1000000000, delay=0.01 ]

        h -- i [weight=10, capacity=1000000000, delay=0.01 ];

        h -- controller [ capacity=1000000000, delay=0.01 ]

        i -- j [weight=10, capacity=1000000000, delay=0.01 ];

        i -- controller [ capacity=1000000000, delay=0.01 ]

        j -- tail [weight=10, capacity=1000000000, delay=0.01 ];

        j -- controller [ capacity=1000000000, delay=0.01 ]

        tail -- controller [ capacity=1000000000, delay=0.01 ]

    }
    
